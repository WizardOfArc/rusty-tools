{
  "components": {
    "schemas": {
      "ValidationErrorModel": {
        "properties": {
          "ctx": {
            "description": "an optional object which contains values required to render the error message.",
            "title": "Error context",
            "type": "object"
          },
          "loc": {
            "description": "the error's location as a list. ",
            "items": {
              "type": "string"
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "description": "a computer-readable identifier of the error type.",
            "title": "Message",
            "type": "string"
          },
          "type_": {
            "description": "a human readable explanation of the error.",
            "title": "Error Type",
            "type": "string"
          }
        },
        "title": "ValidationErrorModel",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Report API",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/partner/v1/auth-service-report": {
      "post": {
        "operationId": "partner_endpoints_auth_service_report_post",
        "responses": {},
        "tags": [
          "partner"
        ],
        "x-platform-gateway-route-enabled-public": false
      }
    },
    "/partner/v1/auth-service-report/{report_id}/content": {
      "get": {
        "operationId": "partner_endpoints_auth_service_report__report_id__content_get",
        "parameters": [
          {
            "description": "report id",
            "in": "path",
            "name": "report_id",
            "required": true,
            "schema": {
              "description": "report id",
              "title": "Report Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "tags": [
          "partner"
        ],
        "x-platform-gateway-route-enabled-public": false
      }
    },
    "/partner/v1/auth-service-report/{report_id}/status": {
      "get": {
        "operationId": "partner_endpoints_auth_service_report__report_id__status_get",
        "parameters": [
          {
            "description": "report id",
            "in": "path",
            "name": "report_id",
            "required": true,
            "schema": {
              "description": "report id",
              "title": "Report Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "tags": [
          "partner"
        ],
        "x-platform-gateway-route-enabled-public": false
      }
    },
    "/partner/v1/report": {
      "post": {
        "operationId": "partner_endpoints_report_post",
        "parameters": [
          {
            "description": "Used to indicate which report type should be returned.\n\nPossible Values: Contact your account manager for a list of reports relevant to your campaigns.",
            "in": "query",
            "name": "report_type",
            "required": true,
            "schema": {
              "description": "report id",
              "title": "Report Type",
              "type": "string"
            }
          },
          {
            "description": "The number of days for which data should be provided, ending on the `date`.\n\nPossible Values: `Any number 1 - 14`.\n\ndefault: 1",
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "The last date for which data should be provided..\n\nPossible Values: `Any date in the format YYYY-MM-DD`\n\ndefault: current date.",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "title": "Date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "query_status": "SUCCESS",
                  "report_id": "1234567890"
                }
              }
            },
            "description": "Report already exists"
          },
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "report_id": "1234567890"
                }
              }
            },
            "description": "Report created successfully"
          },
          "400": {
            "description": "Invalid report_type"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Error processing report_type"
          }
        },
        "summary": "Create Report",
        "tags": [
          "partner"
        ]
      }
    },
    "/partner/v1/report/{report_id}/content": {
      "get": {
        "operationId": "partner_endpoints_report__report_id__content_get",
        "parameters": [
          {
            "description": "report id",
            "in": "path",
            "name": "report_id",
            "required": true,
            "schema": {
              "description": "report id",
              "title": "Report Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Report content"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Report cannot be downloaded",
                  "report_status": "FAILED"
                }
              }
            },
            "description": "Report cannot be downloaded"
          },
          "404": {
            "description": "Report not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error getting report content"
          }
        },
        "summary": "Get Report Content",
        "tags": [
          "partner"
        ]
      }
    },
    "/partner/v1/report/{report_id}/status": {
      "get": {
        "operationId": "partner_endpoints_report__report_id__status_get",
        "parameters": [
          {
            "description": "report id",
            "in": "path",
            "name": "report_id",
            "required": true,
            "schema": {
              "description": "report id",
              "title": "Report Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "content_url": "https://s3.amazonaws.com/report-api-stage/report/1234567890/2024/01/01/00/00/1234567890.csv.gz",
                  "report_status": "SUCCESS"
                }
              }
            },
            "description": "Report status"
          },
          "404": {
            "description": "Report not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error getting report status"
          }
        },
        "summary": "Get Report Status",
        "tags": [
          "partner"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Report API",
      "url": "http://127.0.0.1:8080",
      "x-platform-gateway": {
        "auth": {
          "include_headers": [
            "X-API-KEY"
          ],
          "uri": "http://127.0.0.1:7000/authenticate"
        },
        "prefix": "partner",
        "properties": {
          "append_report_api_query_param": "X-API-KEY",
          "rate_limit_enabled": true,
          "strip_prefix": false
        },
        "scheme": "public"
      }
    },
    {
      "description": "Report API",
      "url": "http://127.0.0.1:8080",
      "x-platform-gateway": {
        "prefix": "reports",
        "properties": {
          "rate_limit_enabled": false,
          "strip_prefix": true
        },
        "scheme": "internal"
      }
    }
  ],
  "tags": [
    {
      "description": "Welcome to the System1 Reporting API! This API is designed to provide you with easy, secure and timely access to data that you need to optimize your campaigns.\n## Getting Started\n### Authentication\nAll API calls must include an API key, which your account manager will provide via email. This API key grants access to all data relevant to your campaigns. It is advisable to guard this API key carefully and distribute it only to those team members who need access to your data.\n### Accessing API Reports\nOur API endpoints are asynchronous in order to facilitate requests for potentially large reports that may not be available immediately. This means that instead of making a single request to one API endpoint and waiting for a response, you will make a total of three API requests, one to each of the following endpoints, in the order listed. *You must call each of these endpoints, including the Status Endpoint, at least once.*  \n|**Endpoint**|**Description**|**Response**|\n|---|---|---|\n|Report Endpoint|This endpoint accepts parameters that describe the desired report and returns the report_id, which is used in all subsequent calls.|report_id|\n|Status Endpoint|This endpoint provides the status of the report that is specified in the URL with the report_id. The report_id is provided in the response from the previous API endpoint. A successful response from the Status Endpoint will also include the link that should be used to request the report download link from the Content Endpoint.|status, content endpoint URL|\n|Content Endpoint|This endpoint returns an HTML code block containing a download link for the requested report. The HTML code can be rendered in a browser window to display the link to a user, or a script can access the link directly. |HTML code with download link|\n\nThese endpoints are designed for programmatic usage. For an optimal experience, API customers should plan to use a script to access our reports. The script should make a single call to the Report Endpoint to obtain the report_id, then use that report_id to call the Status Endpoint approximately every 30 seconds until the response indicates the report is ready. The script can then call the Content Endpoint to receive a download link for the requested data. Detailed information about how to call each endpoint is provided below.",
      "name": "partner",
      "x-displayName": "Reporting API"
    }
  ]
}